name: Deploy Swagger Application to EC2

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip git

    - name: Install Nginx
      run: |
        sudo apt install -y nginx

    - name: Set up Python environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Clone the Swagger server repository
      run: |
        git clone https://github.com/Ashwini-Kanagaraj/swagger_server.git
        cd swagger_server

    - name: Run Gunicorn server
      run: |
        cd swagger_server
        gunicorn --bind 0.0.0.0:8000 app:app --log-level debug &

    - name: Set up Nginx
      run: |
        sudo cp swagger_server/nginx/swagger_server.conf /etc/nginx/conf.d/
        sudo nginx -t
        sudo systemctl reload nginx
        sudo systemctl enable nginx
        sudo systemctl start nginx

    - name: SSH into EC2 and deploy
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
        # Install necessary packages
        sudo yum update -y
        sudo yum install python3 python3-pip git nginx -y

        # Clone the repository
        if [ ! -d "swagger_server" ]; then
            git clone https://github.com/Ashwini-Kanagaraj/swagger_server.git
        fi

        # Navigate to the cloned directory
        cd swagger_server

        # Set up Python virtual environment
        python3 -m venv venv
        source venv/bin/activate

        # Install requirements
        pip install --upgrade pip
        pip install -r requirements.txt

        # Run Gunicorn
        gunicorn --bind 0.0.0.0:8000 app:app --log-level debug &

        # Set up Nginx configuration
        sudo cp nginx/swagger_server.conf /etc/nginx/conf.d/
        sudo nginx -t
        sudo systemctl reload nginx
        sudo systemctl enable nginx
        sudo systemctl start nginx
        EOF
